<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuegou.dao.BanDao">

    <resultMap type="com.yuegou.entity.Ban" id="BanMap">
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="banTime" column="ban_time" jdbcType="TIMESTAMP"/>
        <result property="banUntime" column="ban_untime" jdbcType="TIMESTAMP"/>
        <result property="banServerit" column="ban_serverit" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BanMap">
        select user_id,
               ban_time,
               ban_untime,
               ban_serverit
        from ban
        where user_id = #{userId}
    </select>



    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BanMap">
        select
        user_id, ban_time, ban_untime, ban_serverit
        from ban
        <where>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="banTime != null">
                and ban_time = #{banTime}
            </if>
            <if test="banUntime != null">
                and ban_untime = #{banUntime}
            </if>
            <if test="banServerit != null">
                and ban_serverit = #{banServerit}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from ban
        <where>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="banTime != null">
                and ban_time = #{banTime}
            </if>
            <if test="banUntime != null">
                and ban_untime = #{banUntime}
            </if>
            <if test="banServerit != null">
                and ban_serverit = #{banServerit}
            </if>
        </where>
    </select>
    <select id="queryAll" resultMap="BanMap">
        select user_id,
               ban_time,
               ban_untime,
               ban_serverit from ban;
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="userId" useGeneratedKeys="true">
        insert into ban(ban_time, ban_untime, ban_serverit)
        values (#{banTime}, #{banUntime}, #{banServerit})
    </insert>

    <insert id="insertBatch" keyProperty="userId" useGeneratedKeys="true">
        insert into ban(ban_time, ban_untime, ban_serverit)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.banTime}, #{entity.banUntime}, #{entity.banServerit})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="userId" useGeneratedKeys="true">
        insert into ban(ban_time, ban_untime, ban_serverit)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.banTime}, #{entity.banUntime}, #{entity.banServerit})
        </foreach>
        on duplicate key update
        ban_time = values(ban_time),
        ban_untime = values(ban_untime),
        ban_serverit = values(ban_serverit)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update ban
        <set>
            <if test="banTime != null">
                ban_time = #{banTime},
            </if>
            <if test="banUntime != null">
                ban_untime = #{banUntime},
            </if>
            <if test="banServerit != null">
                ban_serverit = #{banServerit},
            </if>
        </set>
        where user_id = #{userId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from ban
        where user_id = #{userId}
    </delete>

</mapper>

